{"ast":null,"code":"import { GET_RECIPES, POST_ERROR, UPDATE_LIKES, DELETE_RECIPE, ADD_RECIPE, GET_RECIPE, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  recipes: [],\n  recipe: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_RECIPES:\n      return { ...state,\n        recipes: payload,\n        loading: false\n      };\n\n    case GET_RECIPE:\n      return { ...state,\n        recipe: payload,\n        loading: false\n      };\n\n    case ADD_RECIPE:\n      return { ...state,\n        recipes: [payload, ...state.recipes],\n        loading: false\n      };\n\n    case DELETE_RECIPE:\n      return { ...state,\n        recipes: state.recipes.filter(recipe => recipe._id !== payload),\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        recipes: state.recipes.map(recipe => recipe._id === payload.id ? { ...recipe,\n          likes: payload.likes\n        } : recipe),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        recipe: { ...state.recipe,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        recipe: { ...state.recipe,\n          comments: state.recipe.comments.filter(comment => comment._id !== payload)\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/mnt/c/Users/laura/Desktop/recipes/client/src/reducers/recipe.js"],"names":["GET_RECIPES","POST_ERROR","UPDATE_LIKES","DELETE_RECIPE","ADD_RECIPE","GET_RECIPE","ADD_COMMENT","REMOVE_COMMENT","initialState","recipes","recipe","loading","error","state","action","type","payload","filter","_id","map","id","likes","comments","comment"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,UANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAASC,KAAK,GAAGL,YAAjB,EAA+BM,MAA/B,EAAuC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,OAAO,EAAEO,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,MAAM,EAAEM,OAFH;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,OAAO,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,OAAnB,CAFJ;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcQ,MAAd,CAAqBP,MAAM,IAAIA,MAAM,CAACQ,GAAP,KAAeF,OAA9C,CAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcU,GAAd,CAAkBT,MAAM,IAC/BA,MAAM,CAACQ,GAAP,KAAeF,OAAO,CAACI,EAAvB,GAA4B,EAAE,GAAGV,MAAL;AAAaW,UAAAA,KAAK,EAAEL,OAAO,CAACK;AAA5B,SAA5B,GAAkEX,MAD3D,CAFJ;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,MAAM,EAAE,EAAE,GAAGG,KAAK,CAACH,MAAX;AAAmBY,UAAAA,QAAQ,EAAEN;AAA7B,SAFH;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,MAAM,EAAE,EACN,GAAGG,KAAK,CAACH,MADH;AAENY,UAAAA,QAAQ,EAAET,KAAK,CAACH,MAAN,CAAaY,QAAb,CAAsBL,MAAtB,CACRM,OAAO,IAAIA,OAAO,CAACL,GAAR,KAAgBF,OADnB;AAFJ,SAFH;AAQLL,QAAAA,OAAO,EAAE;AARJ,OAAP;;AAUF;AACE,aAAOE,KAAP;AAzDJ;AA2DD","sourcesContent":["import {\r\n  GET_RECIPES,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_RECIPE,\r\n  ADD_RECIPE,\r\n  GET_RECIPE,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  recipes: [],\r\n  recipe: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_RECIPES:\r\n      return {\r\n        ...state,\r\n        recipes: payload,\r\n        loading: false\r\n      };\r\n    case GET_RECIPE:\r\n      return {\r\n        ...state,\r\n        recipe: payload,\r\n        loading: false\r\n      };\r\n    case ADD_RECIPE:\r\n      return {\r\n        ...state,\r\n        recipes: [payload, ...state.recipes],\r\n        loading: false\r\n      };\r\n    case DELETE_RECIPE:\r\n      return {\r\n        ...state,\r\n        recipes: state.recipes.filter(recipe => recipe._id !== payload),\r\n        loading: false\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        recipes: state.recipes.map(recipe =>\r\n          recipe._id === payload.id ? { ...recipe, likes: payload.likes } : recipe\r\n        ),\r\n        loading: false\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        recipe: { ...state.recipe, comments: payload },\r\n        loading: false\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        recipe: {\r\n          ...state.recipe,\r\n          comments: state.recipe.comments.filter(\r\n            comment => comment._id !== payload\r\n          )\r\n        },\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}