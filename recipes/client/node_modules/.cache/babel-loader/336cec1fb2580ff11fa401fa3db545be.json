{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipes/Recipes.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RecipeItem from './RecipeItem';\nimport RecipeForm from './RecipeForm';\nimport { getRecipes } from '../../actions/recipe';\n\nconst Recipes = ({\n  getRecipes,\n  recipe: {\n    recipes\n  }\n}) => {\n  useEffect(() => {\n    getRecipes();\n  }, [getRecipes]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Recipes\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \" Welcome to the community\"), React.createElement(RecipeForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recipes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, recipes.map(recipe => React.createElement(RecipeItem, {\n    key: recipe._id,\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n};\n\nRecipes.propTypes = {\n  getRecipes: PropTypes.func.isRequired,\n  recipe: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, {\n  getRecipes\n})(Recipes);","map":{"version":3,"sources":["/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipes/Recipes.js"],"names":["React","Fragment","useEffect","PropTypes","connect","RecipeItem","RecipeForm","getRecipes","Recipes","recipe","recipes","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAED,EAAAA,UAAF;AAAcE,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAtB,CAAD,KAAyC;AACvDR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,8BAFF,EAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,CAACC,GAAR,CAAaF,MAAD,IACX,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,MAAM,CAACG,GAAxB;AAA6B,IAAA,MAAM,EAAEH,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CADF;AAcD,CAnBD;;AAqBAD,OAAO,CAACK,SAAR,GAAoB;AAClBN,EAAAA,UAAU,EAAEJ,SAAS,CAACW,IAAV,CAAeC,UADT;AAElBN,EAAAA,MAAM,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAFP,CAApB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,MAAM,EAAES,KAAK,CAACT;AADoB,CAAZ,CAAxB;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,OAAzC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport RecipeItem from './RecipeItem';\r\nimport RecipeForm from './RecipeForm';\r\nimport { getRecipes } from '../../actions/recipe';\r\n\r\nconst Recipes = ({ getRecipes, recipe: { recipes } }) => {\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [getRecipes]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Recipes</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community\r\n      </p>\r\n      <RecipeForm />\r\n      <div className=\"recipes\">\r\n        {recipes.map((recipe) => (\r\n          <RecipeItem key={recipe._id} recipe={recipe} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRecipes.propTypes = {\r\n  getRecipes: PropTypes.func.isRequired,\r\n  recipe: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  recipe: state.recipe\r\n});\r\n\r\nexport default connect(mapStateToProps, { getRecipes })(Recipes);\r\n"]},"metadata":{},"sourceType":"module"}