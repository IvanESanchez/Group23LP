{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipe/Recipe.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport RecipeItem from '../recipes/RecipeItem';\nimport CommentForm from '../recipe/CommentForm';\nimport CommentItem from '../recipe/CommentItem';\nimport { getRecipe } from '../../actions/recipe';\n\nconst Recipe = ({\n  getRecipe,\n  recipe: {\n    recipe,\n    loading\n  },\n  match\n}) => {\n  useEffect(() => {\n    getRecipe(match.params.id);\n  }, [getRecipe, match.params.id]);\n  return loading || recipe === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/recipes\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Back To Recipes\"), React.createElement(RecipeItem, {\n    recipe: recipe,\n    showActions: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(CommentForm, {\n    recipeId: recipe._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, recipe.comments.map(comment => React.createElement(CommentItem, {\n    key: comment._id,\n    comment: comment,\n    recipeId: recipe._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nRecipe.propTypes = {\n  getRecipe: PropTypes.func.isRequired,\n  recipe: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  recipe: state.recipe\n});\n\nexport default connect(mapStateToProps, {\n  getRecipe\n})(Recipe);","map":{"version":3,"sources":["/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipe/Recipe.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","RecipeItem","CommentForm","CommentItem","getRecipe","Recipe","recipe","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAED,EAAAA,SAAF;AAAaE,EAAAA,MAAM,EAAE;AAAEA,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAArB;AAA0CC,EAAAA;AAA1C,CAAD,KAAuD;AACpEZ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAT;AACD,GAFQ,EAEN,CAACN,SAAD,EAAYI,KAAK,CAACC,MAAN,CAAaC,EAAzB,CAFM,CAAT;AAIA,SAAOH,OAAO,IAAID,MAAM,KAAK,IAAtB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,SAAS,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,MAApB;AAA4B,IAAA,WAAW,EAAE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,MAAM,CAACK,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,MAAM,CAACM,QAAP,CAAgBC,GAAhB,CAAqBC,OAAD,IACnB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACH,GAA1B;AAA+B,IAAA,OAAO,EAAEG,OAAxC;AAAiD,IAAA,QAAQ,EAAER,MAAM,CAACK,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CANF,CAHF;AAgBD,CArBD;;AAuBAN,MAAM,CAACU,SAAP,GAAmB;AACjBX,EAAAA,SAAS,EAAEP,SAAS,CAACmB,IAAV,CAAeC,UADT;AAEjBX,EAAAA,MAAM,EAAET,SAAS,CAACqB,MAAV,CAAiBD;AAFR,CAAnB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCd,EAAAA,MAAM,EAAEc,KAAK,CAACd;AADoB,CAAZ,CAAxB;;AAIA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,MAAxC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport RecipeItem from '../recipes/RecipeItem';\r\nimport CommentForm from '../recipe/CommentForm';\r\nimport CommentItem from '../recipe/CommentItem';\r\nimport { getRecipe } from '../../actions/recipe';\r\n\r\nconst Recipe = ({ getRecipe, recipe: { recipe, loading }, match }) => {\r\n  useEffect(() => {\r\n    getRecipe(match.params.id);\r\n  }, [getRecipe, match.params.id]);\r\n\r\n  return loading || recipe === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/recipes\" className=\"btn\">\r\n        Back To Recipes\r\n      </Link>\r\n      <RecipeItem recipe={recipe} showActions={false} />\r\n      <CommentForm recipeId={recipe._id} />\r\n      <div className=\"comments\">\r\n        {recipe.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} recipeId={recipe._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRecipe.propTypes = {\r\n  getRecipe: PropTypes.func.isRequired,\r\n  recipe: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  recipe: state.recipe\r\n});\r\n\r\nexport default connect(mapStateToProps, { getRecipe })(Recipe);\r\n"]},"metadata":{},"sourceType":"module"}