{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipe/CommentForm.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/recipe';\n\nconst CommentForm = ({\n  recipeId,\n  addComment\n}) => {\n  const [text, setText] = useState('');\n  return React.createElement(\"div\", {\n    className: \"recipe-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-primary p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Leave a Comment\")), React.createElement(\"form\", {\n    className: \"form my-1\",\n    onSubmit: e => {\n      e.preventDefault();\n      addComment(recipeId, {\n        text\n      });\n      setText('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"text\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Comment this recipe\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-dark my-1\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addComment\n})(CommentForm);","map":{"version":3,"sources":["/mnt/c/Users/laura/Desktop/recipes/client/src/components/recipe/CommentForm.js"],"names":["React","useState","PropTypes","connect","addComment","CommentForm","recipeId","text","setText","e","preventDefault","target","value","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,sBAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA;AAAZ,CAAD,KAA8B;AAChD,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,QAAQ,EAAEQ,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAN,MAAAA,UAAU,CAACE,QAAD,EAAW;AAAEC,QAAAA;AAAF,OAAX,CAAV;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,WAAW,EAAC,qBAJd;AAKE,IAAA,KAAK,EAAED,IALT;AAME,IAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CANxB;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAC,mBAA/B;AAAmD,IAAA,KAAK,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAJF,CADF;AA0BD,CA7BD;;AA+BAP,WAAW,CAACQ,SAAZ,GAAwB;AACtBT,EAAAA,UAAU,EAAEF,SAAS,CAACY,IAAV,CAAeC;AADL,CAAxB;AAIA,eAAeZ,OAAO,CACpB,IADoB,EAEpB;AAAEC,EAAAA;AAAF,CAFoB,CAAP,CAGbC,WAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/recipe';\r\n\r\nconst CommentForm = ({ recipeId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='recipe-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(recipeId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Comment this recipe'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { addComment }\r\n)(CommentForm);\r\n"]},"metadata":{},"sourceType":"module"}